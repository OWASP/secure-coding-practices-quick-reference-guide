\newpage
# 부록 B: 용어집 {#부록-b-용어집 .list-paragraph}

[]{#_bookmark0 .anchor}**오용 사례(Abuse Case):** 소프트웨어의 의도적
오용과 비의도적 오용을 말한다. 오용 케이스는 시스템 설계에서
가정(전제)에 대한 대한 위협요소이다.

**접근 통제(Access Control):** 시스템 자원에 접근하려는 사용자 또는
자원에 대해 허용하고 거부하는 일련의 통제. 일반적으로 역할내 계층적인
역할과 개인의 권한, 그리고 시스템 상호간의 연관성을 기반으로 한다.

**인증(Authentication):** 소프트웨어와 상호 작용하는 사용자 또는 다른
엔터티의 신원을 확인하는 일련의 통제

**가용성(Availability):** 시스템의 접근성과 사용성의 척도

[]{#_bookmark1 .anchor}**정규화(Canonicalize):** 간단한 단일 형식을
이용해 다양한 인코딩과 데이터 표현을 축소하는 것

**통신 보안(Communication Security):** 소프트웨어가 안전하게 정보를
송수신하도록 하는 일련의 통제 **비밀성(Confidentiality):** 정보가
권한이 있는 자에게만 공개되는 것을 보장하는 것

[]{#_bookmark2 .anchor}**상황에 맞는 출력 값 인코딩(Contextual Output
Encoding):** 애플리케이션에서 어떻게 데이터를 활용할지를 고려하여
결과를 인코딩하는 것. 인코딩 방법은 사용된 결과 데이터의 사용 목적에

따라서 다양하다. 클라이언트 측의 응답에 데이터가 포함된다면, 다음을
포함하는 시나리오를 설명해야 한다: HTML 문서의 본문, HTML 속성,
자바스크립트, CSS, URL. 또한 SQL 쿼리, XML, LAP 와 같은 다른 경우에
대해서도 설명해야 한다.

[]{#_bookmark3 .anchor}**크로스 사이트 요청 위조(Cross Site Request
Forgery):** 외부 웹사이트 또는 애플리케이션이 사용자에게 의도하지 않은
요청을 유효한 세션을 맺고 있는 다른 애플리케이션을 보내는 것이다.

애플리케이션은 이해가능하거나 예측 가능한 URL 과 파라메터를 사용할 때
취약하다. 또한 취약한 애플리케이션에 대해 브라우저가 모든 필요한 세션
정보를 자동적으로 한꺼번에 요청할 때 발생 가능하다. (관련 취약점이
매우 일반적이지만 사람들의 이해가 부족하기 때문에 공격유형으론
유일하게 본 문서에서 상세한 설명을 한다)

**암호화 규칙(Cryptographic Practices):** 애플리케이션의 암호연산이
안전하게 처리됨을 보장하는 일련의 통제

**데이터 보호(Data Protection):** 소프트웨어가 안전하게 정보를
저장하도록 처리하는 일련의 통제

**데이터 베이스 보안(Database Security):** 소프트웨어가 데이터베이스와
안전한 방법으로 상호작용하고 데이터베이스가 안전하게 설정되었음을
보장하는 일련의 통제

**에러 처리와 감사기록(Error Handling and Logging):** 애플리케이션이
에러를 안전하게 처리하고 적절하게 이벤트를 감사기록하는 것을 보장하는 일련의 규칙

[]{#_bookmark4 .anchor}**악용(Exploit):** 취약점을 이용해 권한 또는
정보를 취하는 행위. 일반적으로 취약점을 찾아내어 소프트웨어의 보안
통제를 취약하게 하는 의도적인 행위이다.

**파일 관리(File Management):** 코드와 다른 파일 시스템 파일간의
상호작용을 다루는 일련의 통제.

**일반 코딩 규칙(General Coding Practices):** 특정 카테고리에 속하기
힘든 코딩 규칙을 다루는 일련의 통제.

[]{#_bookmark5 .anchor}**위험 문자(Hazardous Character):**
애플리케이션에서 의도한 의미를 가지거나 관련 시스템에서 원래의 의미를
벗어나 특수한 의미로 해석되는 문자 또는 인코딩된 문자 표현. 이들
문자는 다음과 같은 결과를 초래할 수 있다:

-   기존의 코드 또는 구문의 구조를 변경
-   의도되지 않은 새로운 코드를 삽입
-   경로 변경
-   프로그램 함수 또는 루틴이 의도하지 않은 결과 산출
-   에러 조건 발생
-   하위 애플리케이션 또는 시스템에 앞선 결과를 초래

[]{#_bookmark6 .anchor}**HTML 개체 인코딩(HTML Entity Encode):** ASCII
문자를 동일한 의미의 HTML 엔터티로 변경하는 과정. 예를 들어, 인코딩은
문자 "\<"는 동일한 의미의 HTML "&lt;"로 변경한다. HTML 엔터티는

대부분의 인터프리터(특히, 웹 브라우저)에서 특수한 의미를 가지지
않으며, 특정 사용자 측 공격을 완화할 수 있다.

[]{#_bookmark7 .anchor}**피해(Impact):** 의도하지 않은 사건의 발생으로
인해 비즈니스에 초래될 수 있는 부정적 영향의 정도; 취약점을
악용함으로써 발생할 수 있는 결과는 무엇인가?

**입력값 검증(Input Validation):** 모든 입력 데이터 속성이
애플리케이션에서 의도한 자료형, 길이, 범위, 수용 가능한 문자셋과
일치하고 알려진 위험 문자가 포함되지 않았는지를 확인하는 통제

**무결성(Integrity):** 정보의 정확성, 완벽성, 유효성, 그리고 권한이
없는 행위로 인해 변경되지 않았다는 것을 보장하는 것.

[]{#_bookmark8 .anchor}**로그 이벤트 데이터:** 로그 이벤트 데이터는
다음을 포함해야 한다:

1.  신뢰하는 시스템 컴포넌트의 타임 스탬프
2.  각 이벤트의 심각도
3.  다른 로그 엔트리와 섞여있는 경우 관련 이벤트에 대한 태깅
4.  해당 이벤트를 초래한 계정 또는 사용자의 신원(식별자)
5.  요청과 관련된 근원 IP 주소
6.  이벤트 결과(성공 또는 실패)
7.  이벤트에 대한 설명

**메모리 관리(Memory Management):** 메모리와 버퍼 사용을 관리하는
일련의 통제.

[]{#_bookmark9 .anchor}**완화(Mitigate):** 취약점의 심각성을
감소시키기 위한 절차. 이는 취약점 제거, 취약점을 악용하기 어렵도록
조치, 공격이 성공했을 때의 부정적 피해 감소 등을 포함한다.

[]{#_bookmark10 .anchor}**다중 인증(Multi-Factor Authentication):**
사용자가 다수의 다양한 형태의 인증정보를 사용하는 인증 과정.
일반적으로 사용자가 소유한 것(예: 스마트카드), 사용자가 아는 것(예:
개인식별번호), 자신 그

자체(예: 생체정보)를 기반으로 한다.

**출력 값 인코딩(Output Encoding):** 애플리케이션의 출력 데이터로 인한
위험을 제거하기 위해 인코딩을 사용하도록 하는 일련의 통제.

[]{#_bookmark11 .anchor}**매개변수 쿼리(Parameterized Queries
(prepared statements)):** 플레이스홀더(placeholder)를 사용하여 쿼리와
데이터가 구별되도록 한다. 쿼리 구조는 플레이스홀더로 정의된 후 SQL
구문은

데이터베이스에 전송되어 준비된 후, prepared statmenet 가 파라메터와
결합한다. 이는 파라메터 값이 SQL 문자열이 아닌 컴파일된 쿼리와
결합하기 때문에 원래의 쿼리가 변경되는 것을 예방한다.

**데이터 검열(Sanitize Data):** 데이터 제거, 변경, 인코딩, 문자제외를
통해 잠재적으로 위험한 데이터를 안전하게 변경하는 과정.

**보안 통제(Security Controls):** 잠재적 취약점을 완화하고
소프트웨어가 의도한 대로 동작하도록 보장하는 행위.

**보안 요구사항(Security Requirements):** 소프트웨어가 안전한 방법으로
개발되고 배치되도록 돕는 일련의 설계 및 기능 요구사항의 집합

[]{#_bookmark12 .anchor}**순차적 인증(Sequential Authentication):**
인증 데이터가 단일 페이지에서 한번에 처리되는 것이 아니라 인증 성공
페이지까지 순차적으로 요청하는 것

**세션 관리(Session Management):** 웹 애플리케이션이 HTTP 세션을
안전하게 처리하도록 하는 일련의 통제

[]{#_bookmark13 .anchor}**상태 데이터(State Data):** 애플리케이션 또는
서버에서 사용하는 데이터 또는 파라메터로, 지속적인 접속을 유지하거나
다중 요청 과정 또는 거래를 추적하기 위해 사용한다.

**시스템(System):** 운영체제, 웹 서버, 애플리케이션 프레임워크와 관련
인프라 스트럭처를 포괄하는 일반 용어

**시스템 설정(System Configuration):** 소프트웨어의 인프라스트럭처
컴포넌트가 안전하게 배치될 수 있도록 돕는 일련의 통제

[]{#_bookmark14 .anchor}**위협 요소(Threat Agent):** 시스템에 부정적
영향을 미칠 수 있는 임의의 개체. 시스템의 보안 통제를 침해할려는
악의적인 사용자가 일반적 위협 요소이지만, 화재 또는 홍수 등과 같은
물리적 위협과

실수로 인한 시스템 오작동도 이에 포함된다.

[]{#_bookmark15 .anchor}**신뢰 범위(Trust Boundaries):** 일반적으로
신뢰 범위는 직접적인 통제가 가능한 시스템 컴포넌트로 구성된다.
직접적인 통제가 불가능한 외부 시스템(모든 사용자와 협력자가 운영하는
시스템을

포함)으로부터의 모든 접속과 데이터는 비신뢰 구간에 속하며, 내부로 유입
전(다른 시스팀과 상호 작용하기 전)에 검증해야 한다.

**취약점(Vulnerability):** 시스템을 공격 또는 손상되기 쉽도록 하는
약점.
